// gift-search-site/src/ui/components/GiftCard.js
import { categoryPlaceholderImages } from '../../../data/gifts/categoryPlaceholderImages.js';
import { getGiftLinkStatus } from '../../utils/link-checker.js';

export function createGiftCard(gift, options) {
  // –ù–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å—Å—ã–ª–æ–∫ —Ç–æ–≤–∞—Ä–∞
  const linkStatus = getGiftLinkStatus(gift);

  // –í–°–ï —Å—Å—ã–ª–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã - —Å–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É "–ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å"
  if (linkStatus.allBlocked) {
    console.log(`üö´ –¢–æ–≤–∞—Ä "${gift.name}" (ID: ${gift.id}) - –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å`);
    return createCheckingAvailabilityCard(gift, options);
  }

  const {
    showTransitionOverlay,
    openWithPreloader,
    resolveGiftUrl,
    validatePartnerUrl,
    b64url,
    translateCategory,
    formatPrice,
    API_BASE,
  } = options || {};

  const card = document.createElement('div');
  card.className = 'gift-card';
  card.style.animationDelay = `${Math.random() * 0.3}s`;

  // === JSON-LD –º–∏–∫—Ä–æ—Ä–∞–∑–º–µ—Ç–∫–∞ (–∫–∞–∫ –±—ã–ª–æ) ===
  const jsonLd = document.createElement('script');
  jsonLd.type = 'application/ld+json';
  jsonLd.textContent = JSON.stringify(
    {
      '@context': 'https://schema.org',
      '@type': 'Product',
      name: gift.name,
      description: gift.description || '',
      offers: {
        '@type': 'Offer',
        price: gift.price,
        priceCurrency: 'RUB',
        url: (resolveGiftUrl && resolveGiftUrl(gift)) || window.location.href,
        availability: 'https://schema.org/InStock',
        seller: { '@type': 'Organization', name: 'Gift Search Project' },
      },
      category: translateCategory ? translateCategory(gift.category) : gift.category,
      audience: {
        '@type': 'PeopleAudience',
        suggestedMinAge: gift.ageRange?.[0] || 0,
        suggestedMaxAge: gift.ageRange?.[1] || 100,
      },
    },
    null,
    2,
  );
  card.appendChild(jsonLd);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è-–∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const placeholderImageUrl =
    categoryPlaceholderImages[gift.category] || categoryPlaceholderImages.universal;

  // === –ò–ó–ú–ï–ù–ï–ù–ò–ï: –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–≥–∏ —Ç–∞–∫, —á—Ç–æ–±—ã —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –±—ã–ª–æ –ø–µ—Ä–≤—ã–º ===
  const prepareRecipientTags = (tags) => {
    if (!Array.isArray(tags)) return [];
    const currentRecipient = window.currentSearchRecipient || '';
    let sortedTags = [...tags];
    if (currentRecipient) {
      const exactIndex = sortedTags.findIndex(
        (tag) => String(tag).toLowerCase() === currentRecipient.toLowerCase(),
      );
      if (exactIndex > -1) {
        const [exactTag] = sortedTags.splice(exactIndex, 1);
        sortedTags.unshift(exactTag);
      }
    }
    return sortedTags.slice(0, 4);
  };
  const displayTags = prepareRecipientTags(gift.recipientTags);

  // === –ö–∞—Ä–∫–∞—Å –∫–∞—Ä—Ç–æ—á–∫–∏ ===
  card.innerHTML = `
    <div class="gift-card-image" aria-hidden="true">
      <img src="${placeholderImageUrl}" alt="${gift.name || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞'}" loading="lazy" decoding="async" referrerPolicy="no-referrer" fetchPriority="low" style="width:100%; height:auto; object-fit: cover;">
    </div>
    <div class="gift-card-body">
      <h3 class="gift-card-title">${gift.name}</h3>
      <p class="gift-card-description">${gift.description || ''}</p>
      <div class="gift-card-price">${formatPrice ? formatPrice(gift.price) : gift.price}</div>
      <div class="gift-card-tags">
        ${displayTags.map((t) => `<span class="gift-tag">${t}</span>`).join('')}
      </div>
      <div class="gift-card-footer">
        <span class="age-range">${gift.ageRange?.[0] ?? 0}-${gift.ageRange?.[1] ?? 120} –ª–µ—Ç</span>
        <span class="category-badge">${translateCategory ? translateCategory(gift.category) : gift.category}</span>
      </div>
      <div class="gift-card-actions" style="margin-top:12px;"></div>
    </div>
  `;

  // === Lazy image setup ===
  (function setupLazyImage() {
    try {
      const container = card.querySelector('.gift-card-image');
      if (!container) return;

      if (!gift.image || typeof gift.image !== 'string' || gift.image.trim() === '') {
        return;
      }

      const imgEl = container.querySelector('img');
      if (imgEl) {
        imgEl.src = gift.image;
        if (gift.imageWidth && gift.imageHeight) {
          imgEl.width = gift.imageWidth;
          imgEl.height = gift.imageHeight;
        }
      } else {
        container.innerHTML = '';
        const newImg = document.createElement('img');
        newImg.alt = gift.name || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞';
        newImg.loading = 'lazy';
        newImg.decoding = 'async';
        newImg.referrerPolicy = 'no-referrer';
        newImg.fetchPriority = 'low';
        if (gift.imageWidth && gift.imageHeight) {
          newImg.width = gift.imageWidth;
          newImg.height = gift.imageHeight;
        }
        newImg.src = gift.image;
        container.appendChild(newImg);
      }
    } catch (e) {
      console.warn('[GiftCard] setupLazyImage error:', e);
    }
  })();

  const actions = card.querySelector('.gift-card-actions');

  // –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ü–ï–†–í–£–Æ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –∏–∑ –º–∞—Å—Å–∏–≤–∞
  const partnerUrl = linkStatus.firstValidLink
    ? resolveGiftUrl
      ? resolveGiftUrl({ ...gift, link: linkStatus.firstValidLink })
      : linkStatus.firstValidLink
    : null;

  const setUnavailable = () => {
    if (!actions) return;
    actions.innerHTML = `<button class="gift-buy-btn" disabled aria-disabled="true" title="–¢–æ–≤–∞—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω">–û–∂–∏–¥–∞–µ–º –ø–æ—Å—Ç–∞–≤–∫—É</button>`;
    card.style.cursor = 'default';
    card.removeAttribute('role');
    card.removeAttribute('tabindex');
    card.removeAttribute('aria-label');
  };

  const setAvailable = (url) => {
    if (!actions) return;
    const interstitialUrl = (API_BASE || '') + `/api/go?t=${b64url ? b64url(url) : ''}`;
    actions.innerHTML = `
      <a class="gift-buy-btn"
         href="${interstitialUrl}"
         target="_blank"
         rel="noopener nofollow sponsored"
         aria-label="–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–¥–∞—Ä–∫—É –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ">–ö –ø–æ–¥–∞—Ä–∫—É</a>
    `;
    const linkEl = actions.querySelector('.gift-buy-btn');
    linkEl.addEventListener('click', (e) => {
      e.stopPropagation();
      const isPrimary = e.button === 0;
      const hasMods = e.metaKey || e.ctrlKey || e.shiftKey || e.altKey;
      if (isPrimary && !hasMods) {
        e.preventDefault();
        showTransitionOverlay &&
          showTransitionOverlay('üéÅ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥–∞—Ä–∫—É –∏–ª–∏ –≤—ã–±–æ—Ä—É –ø–æ–¥–∞—Ä–∫–æ–≤...', 2000);
        openWithPreloader &&
          openWithPreloader(
            linkEl.href,
            'üéÅ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥–∞—Ä–∫—É –∏–ª–∏ –≤—ã–±–æ—Ä—É –ø–æ–¥–∞—Ä–∫–æ–≤...',
            '–ú–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–∑–Ω—ã–µ –∏–¥–µ–∏!',
          );
      }
    });
    card.style.cursor = 'pointer';
    card.setAttribute('role', 'link');
    card.setAttribute('tabindex', '0');
    card.setAttribute('aria-label', `–û—Ç–∫—Ä—ã—Ç—å —Ç–æ–≤–∞—Ä: ${gift.name}`);
    card.addEventListener('click', (e) => {
      if (e.target && e.target.closest && e.target.closest('.gift-buy-btn')) return;
      showTransitionOverlay &&
        showTransitionOverlay('üéÅ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥–∞—Ä–∫—É –∏–ª–∏ –≤—ã–±–æ—Ä—É –ø–æ–¥–∞—Ä–∫–æ–≤...', 2000);
      openWithPreloader &&
        openWithPreloader(
          interstitialUrl,
          'üéÅ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥–∞—Ä–∫—É –∏–ª–∏ –≤—ã–±–æ—Ä—É –ø–æ–¥–∞—Ä–∫–æ–≤...',
          '–ú–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–∑–Ω—ã–µ –∏–¥–µ–∏!',
        );
    });
    card.addEventListener('keydown', (e) => {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        showTransitionOverlay &&
          showTransitionOverlay('üéÅ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥–∞—Ä–∫—É –∏–ª–∏ –≤—ã–±–æ—Ä—É –ø–æ–¥–∞—Ä–∫–æ–≤...', 2000);
        openWithPreloader &&
          openWithPreloader(
            interstitialUrl,
            'üéÅ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥–∞—Ä–∫—É –∏–ª–∏ –≤—ã–±–æ—Ä—É –ø–æ–¥–∞—Ä–∫–æ–≤...',
            '–ú–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–∑–Ω—ã–µ –∏–¥–µ–∏!',
          );
      }
    });
  };

  if (!partnerUrl) {
    setUnavailable();
    return card;
  }

  const v = validatePartnerUrl ? validatePartnerUrl(partnerUrl) : { ok: true };
  if (!v.ok) {
    setUnavailable();
    return card;
  }

  setAvailable(partnerUrl);

  return card;
}

// –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: —Å–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É "–ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å"
function createCheckingAvailabilityCard(gift, options) {
  const { translateCategory, formatPrice } = options || {};

  const card = document.createElement('div');
  card.className = 'gift-card gift-card--checking';
  card.style.animationDelay = `${Math.random() * 0.3}s`;

  // –î–æ–±–∞–≤–ª—è–µ–º data-–∞—Ç—Ä–∏–±—É—Ç –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  card.setAttribute('data-availability', 'checking');

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è-–∑–∞–≥–ª—É—à–∫–∏
  const placeholderImageUrl =
    categoryPlaceholderImages[gift.category] || categoryPlaceholderImages.universal;

  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–≥–∏
  const prepareRecipientTags = (tags) => {
    if (!Array.isArray(tags)) return [];
    const currentRecipient = window.currentSearchRecipient || '';
    let sortedTags = [...tags];
    if (currentRecipient) {
      const exactIndex = sortedTags.findIndex(
        (tag) => String(tag).toLowerCase() === currentRecipient.toLowerCase(),
      );
      if (exactIndex > -1) {
        const [exactTag] = sortedTags.splice(exactIndex, 1);
        sortedTags.unshift(exactTag);
      }
    }
    return sortedTags.slice(0, 4);
  };
  const displayTags = prepareRecipientTags(gift.recipientTags);

  // –ö–∞—Ä–∫–∞—Å –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å"
  card.innerHTML = `
    <div class="gift-card-image" aria-hidden="true">
      <img src="${placeholderImageUrl}" alt="${gift.name || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞'}" loading="lazy" decoding="async" referrerPolicy="no-referrer" fetchPriority="low" style="width:100%; height:auto; object-fit: cover; opacity: 0.7;">
    </div>
    <div class="gift-card-body">
      <h3 class="gift-card-title" style="opacity: 0.8;">${gift.name}</h3>
      <p class="gift-card-description" style="opacity: 0.7;">${gift.description || ''}</p>
      <div class="gift-card-price" style="opacity: 0.8;">${formatPrice ? formatPrice(gift.price) : gift.price}</div>
      <div class="gift-card-tags">
        ${displayTags.map((t) => `<span class="gift-tag" style="opacity: 0.7;">${t}</span>`).join('')}
      </div>
      <div class="gift-card-footer">
        <span class="age-range" style="opacity: 0.7;">${gift.ageRange?.[0] ?? 0}-${gift.ageRange?.[1] ?? 120} –ª–µ—Ç</span>
        <span class="category-badge" style="opacity: 0.7;">${translateCategory ? translateCategory(gift.category) : gift.category}</span>
      </div>
      <div class="gift-card-actions" style="margin-top:12px;">
        <button class="gift-buy-btn gift-buy-btn--checking" disabled aria-disabled="true">
          –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        </button>
      </div>
    </div>
  `;

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ö–æ–≤–µ—Ä-—ç—Ñ—Ñ–µ–∫—Ç–∞
  const button = card.querySelector('.gift-buy-btn--checking');

  card.addEventListener('mouseenter', () => {
    button.style.transform = 'scale(1.05)';
    button.style.fontWeight = '600';
    button.style.transition = 'all 0.2s ease';
  });

  card.addEventListener('mouseleave', () => {
    button.style.transform = 'scale(1)';
    button.style.fontWeight = '400';
  });

  return card;
}
